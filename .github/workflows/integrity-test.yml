name: Integrity Check
on:
  pull_request:
    types: ["opened", "synchronize"]
jobs:
  preconditions:
    name: "Preconditions"
    runs-on: ubuntu-latest
    outputs:
      has_code_changes: ${{ steps.fileck.outputs.has_code_changes }}
    steps:
      - name: Getting begintime
        run: |
          echo "::set-env name=BEGINTIME::$(date +%s)"
      - name: Checking out (Merge BASE)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.sha }}
      - name: Checking out (Merge HEAD)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Saving begintime
        run:
          echo $BEGINTIME > $GITHUB_WORKSPACE/.begintime
      - name: Checking Changed Filenames
        shell: bash {0}
        run: |
          git --no-pager diff --name-only ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }} > file_changes
          grep -qE '.rs$|Cargo(-template)?.toml$' file_changes
          HAS_CODE_CHANGES=$(test "$? -eq 0")
          echo "::set-output name=has_code_changes::$HAS_CODE_CHANGES"
      - name: Uploading BeginTimer
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: WorkflowBeginTimestamp
          path: .begintime
  check-formats:
    name: "Code Formats"
    runs-on: ubuntu-latest
    needs: preconditions
    steps:
      - name: Downloading BeginTimer
        uses: actions/download-artifact@v1
        with:
          name: WorkflowBeginTimestamp
          path: .
      - name: Checking out(HEAD commit)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checking out
        uses: actions/checkout@v2
      - name: "Running Check: LineWidth"
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: ./.github/actions/codeform-checker
        with:
          script: codeform_check
      - name: "Running Check: Vulnerabilities"
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: ./.github/actions/codeform-checker
        with:
          script: vulnerabilities_elliminator
      - name: Notify as Failure
        uses: ./.github/actions/integrity-check-slack-notifier
        if: failure()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        with:
          status: failure
          failure_step: check-formats
          head_sha: ${{ github.event.pull_request.head.sha }}
          base_sha: ${{ github.event.pull_request.base.sha }}
          pr_number: ${{ github.event.number }}
          pr_title: ${{ github.event.pull_request.title }}
  check-baselayer:
    name: "Base Layer"
    runs-on: ubuntu-latest
    needs: preconditions
    steps:
      - name: Downloading BeginTimer
        uses: actions/download-artifact@v1
        with:
          name: WorkflowBeginTimestamp
          path: .
      - name: Checking out(HEAD commit)
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checking out
        uses: actions/checkout@v2
      - name: Building as Checking
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: ./.github/actions/checkbuild-baselayer
      # - name: Uploading Build Artifacts
      #   uses: actions/upload-artifact@v1
      #   if: success()
      #   with:
      #     name: "Peridot IntegrityCheck BuildCache"
      #     path: .buildcache
      - name: Notify as Failure
        uses: ./.github/actions/integrity-check-slack-notifier
        if: failure()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        with:
          status: failure
          failure_step: check-baselayer
          head_sha: ${{ github.event.pull_request.head.sha }}
          base_sha: ${{ github.event.pull_request.base.sha }}
          pr_number: ${{ github.event.number }}
          pr_title: ${{ github.event.pull_request.title }}
  check-tools:
    name: "Tools"
    runs-on: ubuntu-latest
    needs: [preconditions, check-baselayer]
    steps:
      - name: Checking out(HEAD commit)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checking out
        uses: actions/checkout@v2
      - name: Downloading BeginTimer
        uses: actions/download-artifact@v1
        with:
          name: WorkflowBeginTimestamp
          path: .
      # - name: Downloading last Build Artifacts
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: "Peridot IntegrityCheck BuildCache"
      #     path: .buildcache
      - name: Building as Checking
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: ./.github/actions/checkbuild-subdir
        with:
          path: tools
      - name: Notify as Failure
        uses: ./.github/actions/integrity-check-slack-notifier
        if: failure()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        with:
          status: failure
          failure_step: check-tools
          head_sha: ${{ github.event.pull_request.head.sha }}
          base_sha: ${{ github.event.pull_request.base.sha }}
          pr_number: ${{ github.event.number }}
          pr_title: ${{ github.event.pull_request.title }}
  check-modules:
    name: "Modules"
    runs-on: ubuntu-latest
    needs: [preconditions, check-baselayer]
    steps:
      - name: Checking out(HEAD commit)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checking out
        uses: actions/checkout@v2
      - name: Downloading BeginTimer
        uses: actions/download-artifact@v1
        with:
          name: WorkflowBeginTimestamp
          path: .
      # - name: Downloading last Build Artifacts
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: "Peridot IntegrityCheck BuildCache"
      #     path: .buildcache
      - name: Building as Checking
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: ./.github/actions/checkbuild-subdir
        with:
          path: .
      # - name: Uploading Build Artifacts
      #   uses: actions/upload-artifact@v1
      #   if: success()
      #   with:
      #     name: "Peridot IntegrityCheck BuildCache"
      #     path: .buildcache
      - name: Notify as Failure
        uses: ./.github/actions/integrity-check-slack-notifier
        if: failure()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        with:
          status: failure
          failure_step: check-modules
          head_sha: ${{ github.event.pull_request.head.sha }}
          base_sha: ${{ github.event.pull_request.base.sha }}
          pr_number: ${{ github.event.number }}
          pr_title: ${{ github.event.pull_request.title }}
  check-examples:
    name: "Examples"
    runs-on: ubuntu-latest
    needs: [preconditions, check-modules]
    steps:
      - name: Checking out(HEAD commit)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checking out
        uses: actions/checkout@v2
      - name: Downloading BeginTimer
        uses: actions/download-artifact@v1
        with:
          name: WorkflowBeginTimestamp
          path: .
      # - name: Downloading last Build Artifacts
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: "Peridot IntegrityCheck BuildCache"
      #     path: .buildcache
      - name: Building as Checking
        if: ${{ needs.preconditions.outputs.has_code_changes == 1 }}
        uses: ./.github/actions/checkbuild-subdir
        with:
          path: examples
      - name: Notify as Success
        uses: ./.github/actions/integrity-check-slack-notifier
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        with:
          status: success
          head_sha: ${{ github.event.pull_request.head.sha }}
          base_sha: ${{ github.event.pull_request.base.sha }}
          pr_number: ${{ github.event.number }}
          pr_title: ${{ github.event.pull_request.title }}
      - name: Notify as Failure
        uses: ./.github/actions/integrity-check-slack-notifier
        if: failure()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        with:
          status: failure
          failure_step: check-examples
          head_sha: ${{ github.event.pull_request.head.sha }}
          base_sha: ${{ github.event.pull_request.base.sha }}
          pr_number: ${{ github.event.number }}
          pr_title: ${{ github.event.pull_request.title }}